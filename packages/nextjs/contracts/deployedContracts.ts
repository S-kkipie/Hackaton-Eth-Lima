/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */

const deployedContracts = {
  devnet: {
    IdentityRegistry: {
      address:
        "0x18bbd78249bb9c5f8dda60d806b5d77aead00aa4a67e3a48f484d3cc9df3b90",
      abi: [
        {
          type: "impl",
          name: "IdentityRegistryImpl",
          interface_name: "contracts::identity_registry::IIdentityRegistry",
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::identity_registry::IIdentityRegistry",
          items: [
            {
              type: "function",
              name: "register_user",
              inputs: [
                {
                  name: "role",
                  type: "core::felt252",
                },
                {
                  name: "metadata",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "set_metadata",
              inputs: [
                {
                  name: "metadata",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "admin_set_metadata",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "metadata",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_metadata",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "revoke_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "has_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "role",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_role",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "set_product_registry",
              inputs: [
                {
                  name: "product_registry",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_products_of_user",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_product_of_user_by_index",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "index",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_product_owners",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_owner_history_entry",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
                {
                  name: "index",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::starknet::contract_address::ContractAddress,)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::identity_registry::IdentityRegistry::UserRegistered",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "role",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "metadata",
              type: "core::felt252",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::identity_registry::IdentityRegistry::RoleRevoked",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "revoked_by",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::identity_registry::IdentityRegistry::MetadataUpdated",
          kind: "struct",
          members: [
            {
              name: "account",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "metadata",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "updated_by",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::identity_registry::IdentityRegistry::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "UserRegistered",
              type: "contracts::identity_registry::IdentityRegistry::UserRegistered",
              kind: "nested",
            },
            {
              name: "RoleRevoked",
              type: "contracts::identity_registry::IdentityRegistry::RoleRevoked",
              kind: "nested",
            },
            {
              name: "MetadataUpdated",
              type: "contracts::identity_registry::IdentityRegistry::MetadataUpdated",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x24a782d5c93dda14b22a81fb65794c26a483183d23823cd8a924e6fa7125391",
    },
    RewardManager: {
      address:
        "0x51d07579c32dc13a3c7d055f9bdce549ea20e87bb8493a520ba2b587794a334",
      abi: [
        {
          type: "impl",
          name: "RewardManagerImpl",
          interface_name: "contracts::reward_manager::IRewardManager",
        },
        {
          type: "struct",
          name: "core::integer::u256",
          members: [
            {
              name: "low",
              type: "core::integer::u128",
            },
            {
              name: "high",
              type: "core::integer::u128",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::reward_manager::IRewardManager",
          items: [
            {
              type: "function",
              name: "set_registry_address",
              inputs: [
                {
                  name: "registry_address",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "set_reward_amount",
              inputs: [
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "claim_reward",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_user_rewards",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "(core::integer::u256,)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "reward_token",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::reward_manager::RewardManager::RewardClaimed",
          kind: "struct",
          members: [
            {
              name: "user",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "product_id",
              type: "core::felt252",
              kind: "key",
            },
            {
              name: "reward_amount",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::reward_manager::RewardManager::RewardConfigured",
          kind: "struct",
          members: [
            {
              name: "amount",
              type: "core::integer::u256",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::reward_manager::RewardManager::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "RewardClaimed",
              type: "contracts::reward_manager::RewardManager::RewardClaimed",
              kind: "nested",
            },
            {
              name: "RewardConfigured",
              type: "contracts::reward_manager::RewardManager::RewardConfigured",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x1f8350064ec1850dc5df6790e4ee6d346b32f9f4b3bfeafaa82a6a812b1eecc",
    },
    ProductRegistry: {
      address:
        "0x3fbdb91ccfccd1b9c7d9be6be3c0075f8f7a2254d9850872695d625831ee90c",
      abi: [
        {
          type: "impl",
          name: "ProductRegistryImpl",
          interface_name: "contracts::product_registry::IProductRegistry",
        },
        {
          type: "interface",
          name: "contracts::product_registry::IProductRegistry",
          items: [
            {
              type: "function",
              name: "register_product",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
                {
                  name: "description",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "move_to_instore",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "sell_to_user",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
                {
                  name: "buyer",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "transfer_product",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "apply_validated_return",
              inputs: [
                {
                  name: "return_id",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "factory_recycle",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "set_return_manager",
              inputs: [
                {
                  name: "return_manager_addr",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "set_identity_registry",
              inputs: [
                {
                  name: "identity_registry_addr",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "set_reward_manager",
              inputs: [
                {
                  name: "reward_manager_addr",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_product_info",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252, core::starknet::contract_address::ContractAddress, core::felt252, core::felt252, core::integer::u64)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_product_history",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_product_count",
              inputs: [],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_product_by_index",
              inputs: [
                {
                  name: "index",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_products_of_user",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_product_of_user_by_index",
              inputs: [
                {
                  name: "user",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "index",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_product_owners",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_owner_history_entry",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
                {
                  name: "index",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::starknet::contract_address::ContractAddress,)",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "get_history_entry",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
                {
                  name: "index",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252, core::integer::u64)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "constructor",
          name: "constructor",
          inputs: [
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "identity_registry_addr",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              name: "reward_manager_addr",
              type: "core::starknet::contract_address::ContractAddress",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::product_registry::ProductRegistry::ProductRegistered",
          kind: "struct",
          members: [
            {
              name: "product_id",
              type: "core::felt252",
              kind: "key",
            },
            {
              name: "owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "description",
              type: "core::felt252",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::product_registry::ProductRegistry::ProductStatusUpdated",
          kind: "struct",
          members: [
            {
              name: "product_id",
              type: "core::felt252",
              kind: "key",
            },
            {
              name: "new_status",
              type: "core::felt252",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::product_registry::ProductRegistry::ProductTransferred",
          kind: "struct",
          members: [
            {
              name: "product_id",
              type: "core::felt252",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "timestamp",
              type: "core::integer::u64",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::product_registry::ProductRegistry::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "ProductRegistered",
              type: "contracts::product_registry::ProductRegistry::ProductRegistered",
              kind: "nested",
            },
            {
              name: "ProductStatusUpdated",
              type: "contracts::product_registry::ProductRegistry::ProductStatusUpdated",
              kind: "nested",
            },
            {
              name: "ProductTransferred",
              type: "contracts::product_registry::ProductRegistry::ProductTransferred",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0x228e144e6e4ef399dc0da4727118e078c9633fd57149f0e84e8e95b9d5cca72",
    },
    ReturnValidationManager: {
      address:
        "0x28bd057d4c39b8c084adbff939607013cc0691a9610aed83c97bdf63227a0b",
      abi: [
        {
          type: "impl",
          name: "ReturnAndValidationManagerImpl",
          interface_name:
            "contracts::return_validation_manager::IReturnAndValidationManager",
        },
        {
          type: "enum",
          name: "core::bool",
          variants: [
            {
              name: "False",
              type: "()",
            },
            {
              name: "True",
              type: "()",
            },
          ],
        },
        {
          type: "interface",
          name: "contracts::return_validation_manager::IReturnAndValidationManager",
          items: [
            {
              type: "function",
              name: "create_return",
              inputs: [
                {
                  name: "product_id",
                  type: "core::felt252",
                },
                {
                  name: "target_status",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "validate_return",
              inputs: [
                {
                  name: "return_id",
                  type: "core::felt252",
                },
                {
                  name: "is_valid",
                  type: "core::bool",
                },
                {
                  name: "evidence_ipfs",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "cancel_return",
              inputs: [
                {
                  name: "return_id",
                  type: "core::felt252",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "add_validator",
              inputs: [
                {
                  name: "validator",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "remove_validator",
              inputs: [
                {
                  name: "validator",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "set_product_registry",
              inputs: [
                {
                  name: "product_registry",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "get_return",
              inputs: [
                {
                  name: "return_id",
                  type: "core::felt252",
                },
              ],
              outputs: [
                {
                  type: "(core::felt252, core::starknet::contract_address::ContractAddress, core::felt252, core::starknet::contract_address::ContractAddress, core::felt252, core::integer::u64, core::felt252)",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "impl",
          name: "OwnableImpl",
          interface_name: "openzeppelin_access::ownable::interface::IOwnable",
        },
        {
          type: "interface",
          name: "openzeppelin_access::ownable::interface::IOwnable",
          items: [
            {
              type: "function",
              name: "owner",
              inputs: [],
              outputs: [
                {
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "transfer_ownership",
              inputs: [
                {
                  name: "new_owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "renounce_ownership",
              inputs: [],
              outputs: [],
              state_mutability: "external",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
          kind: "struct",
          members: [
            {
              name: "previous_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
            {
              name: "new_owner",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "key",
            },
          ],
        },
        {
          type: "event",
          name: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnershipTransferred",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
              kind: "nested",
            },
            {
              name: "OwnershipTransferStarted",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
              kind: "nested",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::return_validation_manager::ReturnAndValidationManager::ReturnCreated",
          kind: "struct",
          members: [
            {
              name: "return_id",
              type: "core::felt252",
              kind: "key",
            },
            {
              name: "user",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "product_id",
              type: "core::felt252",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::return_validation_manager::ReturnAndValidationManager::ReturnValidated",
          kind: "struct",
          members: [
            {
              name: "return_id",
              type: "core::felt252",
              kind: "key",
            },
            {
              name: "validator",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
            {
              name: "is_valid",
              type: "core::bool",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::return_validation_manager::ReturnAndValidationManager::ReturnCancelled",
          kind: "struct",
          members: [
            {
              name: "return_id",
              type: "core::felt252",
              kind: "key",
            },
            {
              name: "user",
              type: "core::starknet::contract_address::ContractAddress",
              kind: "data",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::return_validation_manager::ReturnAndValidationManager::Event",
          kind: "enum",
          variants: [
            {
              name: "OwnableEvent",
              type: "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
              kind: "flat",
            },
            {
              name: "ReturnCreated",
              type: "contracts::return_validation_manager::ReturnAndValidationManager::ReturnCreated",
              kind: "nested",
            },
            {
              name: "ReturnValidated",
              type: "contracts::return_validation_manager::ReturnAndValidationManager::ReturnValidated",
              kind: "nested",
            },
            {
              name: "ReturnCancelled",
              type: "contracts::return_validation_manager::ReturnAndValidationManager::ReturnCancelled",
              kind: "nested",
            },
          ],
        },
      ],
      classHash:
        "0xcf277e62f5040a14535fc2bea8fb3eaa3919620811a6205e45847ce4f6a4d4",
    },
  },
} as const;

export default deployedContracts;
